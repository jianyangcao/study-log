# Module 2 – Threats, Attacks, and Vulnerabilities

---

## 1.1 Threat Actors

- **Threat Actors**  
  - Nation state -- Advanced Persistent Threats (APTs)  
  - Unskilled attacker (script kiddies)  
  - Hacktivist  
  - Insider threat  
  - Organized crime  
  - Shadow IT  

- **Attributes of Threat Actors**  
  - Internal vs external  
  - Resource / funding  
  - Motivation  
  - Capability  

- **Motivation**  
  - Exfiltration  
  - Espionage  
  - Service disruption  
  - Blackmial / extortion  
  - Hacktivism  

---

## 1.2 Threat Vectors

- **Definition** → A means of creating a compromise and accessing a system  
- **Examples**:  
  - Direct access  
  - Backdoor software  
  - Email  
  - Images  
  - Unsecure networks – wired, wireless  
  - Supply chains (managed service providers, vendors, suppliers)  
  - Social engineering  

---

## 1.3 Social Engineering (Part 1)

- **What is social engineering** → impersonation in order to gian access or information  
  - Non-techincal means of gaining access to resources without being subjected to normal means of authentication  
  - Socail engineers often use impersonation of an authorized party to gain trust or access  
  - According to Webroot Inc., social engineering is responsible for approximately 93% of data breaches at financial institutions  

- **Social Engineering Attacks**  
  - **Phisihing** → attempt by unauthorized entities posing as legitimate individuals, usually via email, to obtain sensitive information from an indiscriminate group.  
    - *“if you case a large enough net, you're going to catch some fish”*  
    - **Sperar phsihing** → phishing targeted to a specific group, organization, or demographic  
    - **Whaling** → spear phishing toward senior leaders of an organization  
    - **Vishing / Smishing** → VOIP or SMS phishing  
  - **Spam** → unrequested bulk messages sent in large quantities  
  - **SPIM** → spam over instant messaging  
  - **Bluejacking** → spam over Bluetooth  
  - **Prepending** → adding info (e.g., “Re:”) to make a message look legitimate  
  - **Pretexting** → attacker fabricates a reason to need access without having rights  
  - **Identity Fraud** → using info to pose as another (e.g., loans, mortgages fraudulently obtained)  
  - **Invoice Scams** → fake invoices hoping they get paid without investigation  
  - **Hoaxes** → chain letters, fake promises, or misleading actions (e.g., telling user to delete files)  
  - **Credential harvesting** → designed to steal account credentials  
  - **Reconnaissance Attack** → using public sources to gather info  
  - **Impersonatio** → presenting oneself as another  
  - **Watering hole attack** → inject malware through insecure but frequently used 3rd party site  
  - **Typosquatting** → register domain similar to legit site hoping users mistype  
  - **Dumpster diving** → retrieving info from trash / recycling  
  - **Shoulder surfing** → looking over someone’s shoulder to see passwords / PINs  
  - **Tailgating** → following an authorized user into a secure area without creds  
  - **Piggybacking** → similar to tailgating, but user willingly allows attacker in  

---

## 1.4 Social Engineering (Part 2)

- **Influence Campaigns**  
  - Large scale program, often by hostile nation  
  - Geared to sway public opinion  
  - Often used to sway election results  
  - Hybrid warfare = traditional + social means for military goals  
  - Social media exploited by bots to spread misinformation  

- **Principles (Reasons for Effectiveness)**  
  - Authority  
  - Intimidation  
  - Consensus  
  - Scarcity  
  - Familiarity  
  - Trust  
  - Urgency  

---

## 1.5 Indicators of Attacks

### Malware Threat Vectors
- **Definition** → how malicious code is replicated and spread  
- **Types**:  
  - Viruses → need host file + user interaction (fileless viruses don’t)  
  - Worms → memory-resident, self-propagating, no host needed  
  - Trojams → look like legit tool, but contain malware  
  - PUPs/PUAs (Potentially Unwanted Programs/Applications) → bundled software, aka grayware  
  - RAT (Remote Access Trojan) → trojan-delivered backdoor  

### Unauthorized Access
- **Backdoor** → software that opens a port and bypasses authentication  
- **RATs** → covert admin access  
- **Bot** → automated malicious tool  
- **Botnet** → collection of bots controlled by same actor  
- **Command and Control (C2)** → host/network directing compromised machines  
- **Rootkit** → runs at privileged level, hides activity or escalates privileges  

### Ransomware
- **Ransomware** → attacker extorts money, may display threats  
- **Cryptomalware** → encrypts files, ransom demanded for key  
- **Logic / Time Bombs** → payload triggered by event or time  

### Spyware
- **Spyware** → tracks user activity  
- **Tracking cookies** → log sites, purchases, queries  
- **Adware** → reconfigures browser, ad-filled homepages  
- **Keylogger** → records keystrokes  

### Password Attacks
- Dictionary → every word in a file  
- Brute Force → every combination  
- Hybrid → words + common substitutions  
- Rainbow table → precomputed hashes matched to passwords  
- Plaintext storage or weak protocols  
- Spraying → try common password (e.g., Password1) across many accounts  

### Physical Security Threats
- Malicious USB cable → data skimming at public chargers  
- Flash drives → malware distribution / data theft  
- Card Cloning → duplicate cards  
- Skimming → fake reader over legit one  

### Adversarial AI
- AI used to analyze user/system activity  
- **Tainted Training Data** → attacker poisons ML training  
- **Targeted ML algorithms** → adversarial manipulation  

### 3rd Party Attacks
- **Supply chain** → compromised vendor component (e.g., CPU backdoor)  
- **Cloud-based** → attacks at CSP or accounts/protocols  
- **Poorly written APIs** → exploited for attacks  

### On-Premises vs Cloud-Based
- Risks are similar; difference is who manages them  
  - Facility security  
  - Hardware/software vulnerabilities  
  - Malicious insiders  
  - Weak configs  
  - 3rd party issues  

### Cryptographic Attacks
- **Collision attacks** → find 2 inputs with same hash  
- **Birthday attacks** → exploit probability of hash collisions  
- **Downgrade attacks** → force weaker crypto version  

### Pass the Hash
- Password hashes stored in protected memory  
- Attacker with admin rights can steal + reuse hashes  
- Exploits SSO, multiple hashes may be in memory  
- Mitigation: users shouldn’t have debug or admin rights locally  

---

## 1.6 Indicators for Application Attacks

- **Code Injection** → attacker supplies malicious input, app executes as code (SQL, DLL, LDAP, XML).  
  - Input validation & sanitization mitigate risk  
  - Fuzzing tests apps for weak input controls  

---

## 1.7 Cross-Site Attacks

- **Cross-Site Scripting (Persistent)**  
  1. Adversary finds vulnerable site  
  2. Injects malicious script stealing cookies  
  3. User triggers script each visit  
  4. Session cookie sent to adversary  

- **Cross-Site Scripting (Reflective)**  
  1. Adversary sends malicious URL  
  2. User clicks → site responds with malicious code  
  3. Browser executes code → sends info to adversary  

- **Cross-Site Request Forgery (XSRF)**  
  1. Adversary forges request (e.g., fund transfer)  
  2. User logged in clicks malicious link  
  3. Site validates request, executes attacker’s action  

- **Key difference**  
  - **XSS** → exploits user’s trust in a site  
  - **XSRF** → exploits site’s trust in a user  

---

## 1.8 Timing Attacks

- **Physical Access** → attacker exploits before security check  
- **Race Conditions** → exploit timing flaws  
- **TOC/TOU (Time of Check / Time of Use)** → mismatch in validation vs execution  
- **Replay Attacks** → capture + resend traffic (password/session replay)  

- **Error Handling**  
  - System should fail securely  
  - Avoid excessive error details for attacker  

---

## 1.9 Memory Issues

- **Integer Overflow** → value exceeds expected range  
- **Memory Leak** → app fails to release memory  
- **Buffer Overflow** → input exceeds buffer size  

---
