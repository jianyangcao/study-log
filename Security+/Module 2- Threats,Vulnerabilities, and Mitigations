# 1.1 Threat Actors

**Threat Actors**  
- Nation state -- Advanced Persistent Threats (APTs)  
- Unskilled attacker (script kiddies)  
- Hacktivist  
- Insider threat  
- Organized crime  
- Shadow IT  

**Attributes of Threat Actors**  
- Internal vs external  
- Resource / funding  
- Motivation  
- Capability  

**Motivation**  
- Exfiltration  
- Espionage  
- Service disruption  
- Blackmail / extortion  
- Hacktivism  

---

# 1.2 Threat Vectors

**Threat Vector**: A means of creating a compromise and accessing a system  

- Direct access  
- Backdoor software  
- Email  
- Images  
- Unsecure networks - wired, wireless  
- Supply chains (managed service providers, vendors, suppliers)  
- Social engineering  

---

# 1.3 Social Engineering (Part 1)

**What is social engineering**  
- Impersonation in order to gain access or information  
- Non-technical means of gaining access to resources without being subjected to normal means of authentication  
- Social engineers often use impersonation of an authorized party to gain trust or access  
- According to Webroot Inc., social engineering is responsible for approximately 93% of data breaches at financial institutions  

**Social Engineering Attacks**  
- **Phishing**: an attempt by unauthorized entities posing as legitimate individuals, usually via email, to obtain sensitive information from an indiscriminate group of individuals. *‚ÄúIf you cast a large enough net, you're going to catch some fish.‚Äù*  
  - **Spear phishing**: phishing targeted to a specific group, organization, or demographic  
    - **Whaling**: a type of spear phishing geared toward the senior leaders of an organization  
  - **Vishing / Smishing**: VOIP or SMS phishing  
- **Spam**: unrequested bulk messages sent in large quantities  
- **SPIM**: spam of instant messaging  
- **Bluejacking**: spam over Bluetooth  
- **Prepending**: adding information to a message to legitimize it (e.g., ‚ÄúRe:‚Äù in the subject line)  
- **Pretexting**: attacker fabricates a legitimate reason they would need access to a system/resource  
- **Identity Fraud**: using stolen information to present oneself as another (e.g., loans, mortgages)  
- **Invoice Scams**: sending fake invoices hoping they get paid without investigation  
- **Hoaxes**: chain letters, fake promises of financial gain, or fake instructions (e.g., delete files)  
- **Credential harvesting**: designed to steal account and authentication credentials  
- **Reconnaissance Attack**: using public sources to collect information  
- **Impersonation**: presenting oneself as another  
- **Watering hole attack**: inject malware through a less secure third-party site frequently visited by target org  
- **Typosquatting**: registering a domain similar to a legit site, hoping users mistype  
- **Dumpster diving**: retrieving info from trash or discarded material  
- **Shoulder surfing**: looking over someone‚Äôs shoulder to see sensitive info (e.g., PINs, passwords)  
- **Tailgating**: following authorized user into secure area without credentials  
- **Piggybacking**: similar to tailgating, but authorized user knowingly allows entry  

---

# 1.4 Social Engineering (Part 2)

**Influence Campaigns**  
- Large-scale program, often launched by a hostile nation  
- Geared towards swaying public opinion  
- Often used to sway election results  
- Hybrid warfare includes both traditional and social means to achieve military goals  
- Social media frequently exploited by bots to spread misinformation  

**Principles (Reasons for Effectiveness)**  
- Authority  
- Intimidation  
- Consensus  
- Scarcity  
- Familiarity  
- Trust  
- Urgency  

---

# 1.5 Indicators of Attacks

**Malware Threat Vectors**  
- Viruses: require host file + user interaction (fileless viruses don‚Äôt need host)  
- Worms: memory resident, self-propagating, no host file  
- Trojans: appear as desirable apps but contain malware  
- PUPs/PUAs: ‚Äúgrayware,‚Äù installed alongside chosen apps  
- RAT (Remote Access Trojan): delivered by Trojan, gives covert admin access  

**Unauthorized Access**  
- Backdoor: opens port, bypasses normal authentication  
- RATs: covert admin access  
- Bot: automated malicious tool  
- Botnet: collection of compromised systems under attacker control  
- Command and Control (C2): attacker‚Äôs server that communicates with exploited hosts  
- Rootkit: escalates privileges, hides processes  

**Ransomware**  
- Ransomware: extorts money, may display threatening messages  
- Cryptomalware: encrypts files, ransom for decryption key  
- Logic Bombs: triggered by logical event  
- Time Bombs: triggered by date/time  

**Spyware**  
- Spyware: tracks user activity  
- Tracking cookies: record browsing activity, shopping, etc.  
- Adware: reconfigures browsers, loads ad-filled homepage  
- Keylogger: records keystrokes  

**Attacks on Passwords**  
- Dictionary: tries every word in file  
- Brute Force: tries every character combination  
- Hybrid: dictionary + common character combos  
- Rainbow Table: precomputed brute force hashes (faster than brute force)  
- Plaintext: unencrypted DBs or protocols  
- Spraying: try common passwords (e.g., Password1) across many accounts  

**Physical Security Threats**  
- Malicious USB cable: acts as skimmer at public charging stations  
- Flash Drives: malware delivery + data theft  
- Card Cloning: duplicate existing card  
- Skimming: counterfeit reader over legit one  

**Adversarial AI**  
- Tainted Training Data: poisoning AI training data  
- ML Algorithms: targeted just like other systems  

**3rd Party Attacks**  
- Supply Chain: compromised vendor elements (hardware/software)  
- Cloud-based: attack CSP or its protocols/accounts  
- Poorly written APIs  

**On-Premises vs Cloud-Based Attacks**  
- Risks are similar, but responsibility differs  
  - Facility security  
  - Hardware/software vulnerabilities  
  - Malicious insiders  
  - Weak configurations  
  - 3rd party issues  

**Cryptographic Attacks**  
- Collision Attacks: attempt to create same hash  
- Birthday Attacks: exploit probability to find collisions  
- Downgrade Attacks: force weaker security level  

**Pass the Hash**  
- Password hashes in protected memory can be reused  
- Attacker uses SSO authentication with stolen hashes  
- Hashes may include current users, remote users, service accounts  
- Mitigation: limit admin/debug privileges  

---

# 1.6 Indicators for Application Attacks

**Code Injection**  
- Attack: attacker supplies malicious input, executed as code (SQL, DLL, LDAP, XML)  
- Mitigation: input validation and sanitization  
- Fuzzing: tests app for weak input control  

---

# 1.7 Cross-Site Attacks

**Cross-Site Scripting (Persistent)**  
1. Adversary finds site vulnerable to script injection  
2. Injects malicious script to steal cookies  
3. User activates script when accessing site  
4. Session cookie sent to adversary  

**Cross-Site Scripting (Reflected / Non-Persistent)**  
1. Adversary sends malicious URL to user  
2. User clicks link ‚Üí site includes malicious string in response  
3. Browser executes malicious script  
4. User‚Äôs sensitive info sent to adversary  

**Cross-Site Request Forgery (XSRF)**  
1. Adversary forges request (e.g., fund transfer)  
2. Embeds request in link ‚Üí sends to logged-in user  
3. User clicks link, unintentionally sends request  
4. Site validates and transfers funds  

üìå **Key difference**:  
- XSS: exploits user‚Äôs trust in site  
- XSRF: exploits site‚Äôs trust in user  

---

# 1.8 Timing Attacks

- **Physical Access**: gain entry before security verified  
- **Race Conditions**: exploit timing/order of processes  
- **TOC/TOU (Time of Check / Time of Use)**: mismatch between check vs execution  
- **Replay Attacks**: capture + reuse traffic (password/session)  
- **Error Handling**: system should fail securely, avoid excessive error info  

---

# 1.9 Memory Issues

- **Integer Overflow**: values out of expected range  
- **Memory Leak**: app doesn‚Äôt release memory properly  
- **Buffer Overflow**: more entries than buffer can handle  

---
